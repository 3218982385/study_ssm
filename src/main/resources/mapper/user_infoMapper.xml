<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.study.dao.user_infoMapper">
	<resultMap id="BaseResultMap" type="com.study.bean.user_info">
		<id column="id" jdbcType="VARCHAR" property="id" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="login" jdbcType="VARCHAR" property="login" />
		<result column="password" jdbcType="VARCHAR"
			property="password" />
		<result column="origID" jdbcType="VARCHAR" property="origid" />
		<result column="inputuserID" jdbcType="VARCHAR"
			property="inputuserid" />
		<result column="inputorgid" jdbcType="VARCHAR"
			property="inputorgid" />
		<result column="inputtime" jdbcType="VARCHAR"
			property="inputtime" />
		<result column="updateuserid" jdbcType="VARCHAR"
			property="updateuserid" />
		<result column="updateorigid" jdbcType="VARCHAR"
			property="updateorigid" />
		<result column="updatetime" jdbcType="VARCHAR"
			property="updatetime" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, name, login, password, origID, inputuserID, inputorgid, inputtime,
		updateuserid,
		updateorigid, updatetime
	</sql>
	<!-- 带条件的查询 -->
	<select id="selectByExample"
		parameterType="com.study.bean.user_infoExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from user_info
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<!-- 根据主键查询 -->
	<select id="selectByPrimaryKey" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from user_info
		where id = #{id,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from user_info
		where id = #{id,jdbcType=VARCHAR}
	</delete>
	<delete id="deleteByExample"
		parameterType="com.study.bean.user_infoExample">
		delete from user_info
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.study.bean.user_info">
		insert into user_info (id, name, login,
		password, origID, inputuserID,
		inputorgid, inputtime, updateuserid,
		updateorigid, updatetime)
		values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
		#{login,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR}, #{origid,jdbcType=VARCHAR}, #{inputuserid,jdbcType=VARCHAR},
		#{inputorgid,jdbcType=VARCHAR}, #{inputtime,jdbcType=VARCHAR},
		#{updateuserid,jdbcType=VARCHAR},
		#{updateorigid,jdbcType=VARCHAR}, #{updatetime,jdbcType=VARCHAR})
	</insert>
	<!-- 选择的行的插入，传入哪个参数插入那个字段 -->
	<insert id="insertSelective"
		parameterType="com.study.bean.user_info">
		insert into user_info
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="login != null">
				login,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="origid != null">
				origID,
			</if>
			<if test="inputuserid != null">
				inputuserID,
			</if>
			<if test="inputorgid != null">
				inputorgid,
			</if>
			<if test="inputtime != null">
				inputtime,
			</if>
			<if test="updateuserid != null">
				updateuserid,
			</if>
			<if test="updateorigid != null">
				updateorigid,
			</if>
			<if test="updatetime != null">
				updatetime,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="login != null">
				#{login,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="origid != null">
				#{origid,jdbcType=VARCHAR},
			</if>
			<if test="inputuserid != null">
				#{inputuserid,jdbcType=VARCHAR},
			</if>
			<if test="inputorgid != null">
				#{inputorgid,jdbcType=VARCHAR},
			</if>
			<if test="inputtime != null">
				#{inputtime,jdbcType=VARCHAR},
			</if>
			<if test="updateuserid != null">
				#{updateuserid,jdbcType=VARCHAR},
			</if>
			<if test="updateorigid != null">
				#{updateorigid,jdbcType=VARCHAR},
			</if>
			<if test="updatetime != null">
				#{updatetime,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<!-- 根据条件统计 -->
	<select id="countByExample"
		parameterType="com.study.bean.user_infoExample"
		resultType="java.lang.Long">
		select count(*) from user_info
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<!-- 选择更新，传入哪个字段更新哪个字段，不传不更新 -->
	<update id="updateByExampleSelective" parameterType="map">
		update user_info
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=VARCHAR},
			</if>
			<if test="record.name != null">
				name = #{record.name,jdbcType=VARCHAR},
			</if>
			<if test="record.login != null">
				login = #{record.login,jdbcType=VARCHAR},
			</if>
			<if test="record.password != null">
				password = #{record.password,jdbcType=VARCHAR},
			</if>
			<if test="record.origid != null">
				origID = #{record.origid,jdbcType=VARCHAR},
			</if>
			<if test="record.inputuserid != null">
				inputuserID = #{record.inputuserid,jdbcType=VARCHAR},
			</if>
			<if test="record.inputorgid != null">
				inputorgid = #{record.inputorgid,jdbcType=VARCHAR},
			</if>
			<if test="record.inputtime != null">
				inputtime = #{record.inputtime,jdbcType=VARCHAR},
			</if>
			<if test="record.updateuserid != null">
				updateuserid = #{record.updateuserid,jdbcType=VARCHAR},
			</if>
			<if test="record.updateorigid != null">
				updateorigid = #{record.updateorigid,jdbcType=VARCHAR},
			</if>
			<if test="record.updatetime != null">
				updatetime = #{record.updatetime,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<!-- 更新全部字段 -->
	<update id="updateByExample" parameterType="map">
		update user_info
		set id = #{record.id,jdbcType=VARCHAR},
		name = #{record.name,jdbcType=VARCHAR},
		login = #{record.login,jdbcType=VARCHAR},
		password = #{record.password,jdbcType=VARCHAR},
		origID = #{record.origid,jdbcType=VARCHAR},
		inputuserID = #{record.inputuserid,jdbcType=VARCHAR},
		inputorgid = #{record.inputorgid,jdbcType=VARCHAR},
		inputtime = #{record.inputtime,jdbcType=VARCHAR},
		updateuserid = #{record.updateuserid,jdbcType=VARCHAR},
		updateorigid = #{record.updateorigid,jdbcType=VARCHAR},
		updatetime = #{record.updatetime,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.study.bean.user_info">
		update user_info
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="login != null">
				login = #{login,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="origid != null">
				origID = #{origid,jdbcType=VARCHAR},
			</if>
			<if test="inputuserid != null">
				inputuserID = #{inputuserid,jdbcType=VARCHAR},
			</if>
			<if test="inputorgid != null">
				inputorgid = #{inputorgid,jdbcType=VARCHAR},
			</if>
			<if test="inputtime != null">
				inputtime = #{inputtime,jdbcType=VARCHAR},
			</if>
			<if test="updateuserid != null">
				updateuserid = #{updateuserid,jdbcType=VARCHAR},
			</if>
			<if test="updateorigid != null">
				updateorigid = #{updateorigid,jdbcType=VARCHAR},
			</if>
			<if test="updatetime != null">
				updatetime = #{updatetime,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.study.bean.user_info">
		update user_info
		set name = #{name,jdbcType=VARCHAR},
		login = #{login,jdbcType=VARCHAR},
		password = #{password,jdbcType=VARCHAR},
		origID = #{origid,jdbcType=VARCHAR},
		inputuserID = #{inputuserid,jdbcType=VARCHAR},
		inputorgid = #{inputorgid,jdbcType=VARCHAR},
		inputtime = #{inputtime,jdbcType=VARCHAR},
		updateuserid = #{updateuserid,jdbcType=VARCHAR},
		updateorigid = #{updateorigid,jdbcType=VARCHAR},
		updatetime = #{updatetime,jdbcType=VARCHAR}
		where id = #{id,jdbcType=VARCHAR}
	</update>
</mapper>